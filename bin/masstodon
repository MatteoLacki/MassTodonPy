#!/usr/bin/env python2
import argparse
import json
import os

from MassTodonPy.Parsers.Paths import parse_path
from MassTodonPy.CLI.config_parser import parse_config_file
from MassTodonPy.CLI.MassTodon_wrapper import perform_calculations

parser = argparse.ArgumentParser()

parser.add_argument("spectrum_path",
                    help="path to the spectrum file, with spectrum file extension:\
                          either .txt or .mzxml, case insensitive.")

parser.add_argument("config_path",
                    help="path to the file with configuration")

parser.add_argument("-o",
                    "--output_path",
                    help="Path to the output.\
                          If not provided, spectrum is used path by default.")

args = parser.parse_args()

def add_backslash(p):
    if p[-1] != '/':
        p += '/'
    return p

# establish output path
output_path, file_name, _ = parse_path(args.spectrum_path)
output_path = add_backslash(output_path)

if args.output_path:
    output_path = args.output_path
else:
    output_path += 'output'

output_path = add_backslash(output_path)
if not os.path.exists(output_path):
    os.makedirs(output_path)

# load config
config_path, config_ext = os.path.splitext(args.config_path)

if config_ext == '.json':
    with open(args.config_path, 'r') as f:
        config = json.load(f)
else:
    config = parse_config_file(args.config_path)

# run MassTodon
# print(args.spectrum_path)
# print(output_path)
# print(config)
# precursor


# perform_calculations(spectrum_path=args.spectrum_path,
#                      output_path=output_path,
#                      config=config)

# print('')
# print('Thank you!')
# print('Please, be kind to MassTodons.')
# print('')


# output_path = '/Users/matteo/Documents/MassTodon/MassTodonPy/Tests/data/output'
# spectrum_path = '/Users/matteo/Documents/MassTodon/MassTodonPy/Tests/data/FRL-010513-SUBP-WH000-WV300.txt'
