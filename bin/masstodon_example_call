#!/usr/bin/env python
from collections import defaultdict
import os

from MassTodonPy.Data.get_dataset import get_dataset
from MassTodonPy.MassTodon import MassTodon
from MassTodonPy.Misc.cvxopt_wrapper import cvxopt_wrapper
from MassTodonPy.Plot import bokeh_spectrum
from MassTodonPy.Plot import bokeh_aggregated_precursors
from MassTodonPy.Plot import bokeh_aggregated_fragments
from MassTodonPy.Plot import bokeh_estimated_aggregated_fragments

if __name__ == '__main__':
    print("\nWelcome to MassTodon example call.")

    print("\t- reading data.")
    substanceP = get_dataset('substanceP')
    modifications = defaultdict(dict)
    for (number, group), mods in substanceP.precursor.modifications.items():
        modifications[number][group] = dict(mods)

    print("\t- running MassTodonPy.")

    masstodon = MassTodon(spectrum=substanceP.spectrum,
                          mz_tol=.05,
                          fasta=substanceP.precursor.fasta,
                          charge=3,
                          name='substanceP',
                          modifications=modifications,
                          _L1_flow=.01,
                          _L2_flow=.01)

    print("\t- making basic plot.")
    path  = './test_output/'
    masstodon.write(path)
    bokeh_spectrum(masstodon, path + 'spectrum.html')
    bokeh_aggregated_precursors(masstodon, path + 'aggregated_precursors.html')
    bokeh_aggregated_fragments(masstodon, path + 'aggregated_fragments.html')
    bokeh_estimated_aggregated_fragments(masstodon, path + 'estimated_aggregated_fragments.html')

    print("Send us your money to save MassTodons!\n")
