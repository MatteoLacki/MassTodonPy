{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inten",
				"intensity_dummy"
			],
			[
				"bito",
				"bitonic_clustering"
			],
			[
				"abs",
				"abs_perc_dev"
			],
			[
				"mz",
				"mz_diffs"
			],
			[
				"good",
				"good_c"
			],
			[
				"intensit",
				"intensity_test"
			],
			[
				"bitno",
				"bitonic_clustering"
			],
			[
				"intenis",
				"intensity_test"
			],
			[
				"prev",
				"prev_color"
			],
			[
				"bit",
				"bitonic_clustering"
			],
			[
				"cluster",
				"clusters"
			],
			[
				"runs",
				"runs_no"
			],
			[
				"coe",
				"coefficients\tfunction"
			],
			[
				"per",
				"percentiles_of_N_integers\tfunction"
			],
			[
				"medi",
				"rt_median_distance"
			],
			[
				"anno",
				"annotated\tstatement"
			],
			[
				"o",
				"ordered_str"
			],
			[
				"min",
				"min_rt\tstatement"
			],
			[
				"unlabelled",
				"unlabelled_slim\tstatement"
			],
			[
				"annot",
				"annotated_stats\tstatement"
			],
			[
				"asa",
				"asarray\tfunction"
			],
			[
				"ann",
				"annotated_slim\tstatement"
			],
			[
				"rt",
				"rt_median_distance"
			],
			[
				"as",
				"asarray\tfunction"
			],
			[
				"pat",
				"patsy\tmodule"
			],
			[
				"mod",
				"model_name\tstatement"
			],
			[
				"Nto",
				"NotImplementedError\tclass"
			],
			[
				"scan",
				"scannumber"
			],
			[
				"sca",
				"scannumber"
			],
			[
				"nu",
				"numSlice2"
			],
			[
				"num",
				"numSlice"
			],
			[
				"mul",
				"multiprocessing\tmodule"
			],
			[
				"D",
				"D_stats"
			],
			[
				"kd",
				"kd_tree_nice\tmodule"
			],
			[
				"bo",
				"boxes_sizes\tstatement"
			],
			[
				"box",
				"box_tenants\tstatement"
			],
			[
				"idx",
				"idx2"
			],
			[
				"rt_l",
				"rt_aligned_min"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import matplotlib.pyplot as plt\n\n\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nfrom collections import OrderedDict\n\ncmaps = OrderedDict()\n\ncmaps['Qualitative'] = ['Pastel1', 'Pastel2', 'Paired', 'Accent',\n                        'Dark2', 'Set1', 'Set2', 'Set3',\n                        'tab10', 'tab20', 'tab20b', 'tab20c']\n\n\n\nnrows = max(len(cmap_list) for cmap_category, cmap_list in cmaps.items())\ngradient = np.linspace(0, 1, 256)\ngradient = np.vstack((gradient, gradient))\n\ndef plot_color_gradients(cmap_category, cmap_list, nrows):\n    fig, axes = plt.subplots(nrows=nrows)\n    fig.subplots_adjust(top=0.95, bottom=0.01, left=0.2, right=0.99)\n    axes[0].set_title(cmap_category + ' colormaps', fontsize=14)\n\n    for ax, name in zip(axes, cmap_list):\n        ax.imshow(gradient, aspect='auto', cmap=plt.get_cmap(name))\n        pos = list(ax.get_position().bounds)\n        x_text = pos[0] - 0.01\n        y_text = pos[1] + pos[3]/2.\n        fig.text(x_text, y_text, name, va='center', ha='right', fontsize=10)\n\n    # Turn off *all* ticks & spines, not just the ones with colormaps.\n    for ax in axes:\n        ax.set_axis_off()\n\nfor cmap_category, cmap_list in cmaps.items():\n    plot_color_gradients(cmap_category, cmap_list, nrows)\n\nplt.show()\n\ncmap = plt.get_cmap('tab10', 10)\n\ncmap(0)\nhelp(cmap)\n ",
			"file": "Development/Orbitrap/matplotlib_colors.py",
			"file_size": 1332,
			"file_write_time": 131756343471012383,
			"settings":
			{
				"buffer_size": 1362,
				"line_ending": "Unix",
				"name": "cmaps['Qualitative'] = ['Pastel1', 'Pastel2', 'Pai"
			}
		},
		{
			"file": "Development/Orbitrap/preprocessing.py",
			"settings":
			{
				"buffer_size": 3961,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "MassTodonPy/Spectra/peak_clustering.py",
			"settings":
			{
				"buffer_size": 5726,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "In [1]:                                                                                              \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n                                                                                                     \n",
			"settings":
			{
				"buffer_size": 5610,
				"line_ending": "Unix",
				"name": "Terminal (bash)",
				"read_only": true,
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Golang Build/Go.sublime-build",
					""
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Run"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Test"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Install"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Cross-Compile (Interactive)"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Golang Build/Go.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"colo",
				"UI: Select Color Scheme"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"term",
				"Preferences: Terminal View: Color Scheme"
			],
			[
				"send",
				"SendCode: Choose Program"
			],
			[
				"terminal",
				"Terminal View: Open Bash Terminal"
			],
			[
				"teemin",
				"Terminal View: Open Bash Terminal"
			],
			[
				"ter",
				"Preferences: Terminal View: Settings"
			],
			[
				"send ",
				"SendCode: Choose Program"
			],
			[
				"sen",
				"SendCode: Choose Program"
			],
			[
				"termin",
				"Preferences: Terminal View: Settings"
			],
			[
				"ay",
				"ayu: Activate theme"
			],
			[
				"box",
				"Boxy Theme: Preferences"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"colorco",
				"Tweak Colorcode to current color scheme"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"send code",
				"SendCode: Choose Program"
			],
			[
				"instla",
				"Package Control: Install Package"
			],
			[
				"colors",
				"UI: Select Color Scheme"
			],
			[
				"her",
				"Hermes: List Kernels"
			],
			[
				"herm",
				"Hermes: Connect Kernel"
			],
			[
				"them",
				"UI: Select Color Scheme"
			],
			[
				"antia",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/matteo/Projects/MassTodonPy",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/readers",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Spectra"
	],
	"file_history":
	[
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Spectra/bitonic_clustering.py",
		"/Users/matteo/Projects/MassTodonPy/Development/Orbitrap/from_npy.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Spectra/Read.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/readers/__init__.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/plotters/__init__.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/plotters/spectrum.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Spectra/Orbitrap.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/arrays/operations.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Arrays/operations.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Arrays/__init__.py",
		"/Users/matteo/Desktop/Stat/more_of_density_and_quantile_regression.py",
		"/Users/matteo/Projects/rta/rta/development_script.py",
		"/Users/matteo/Projects/MassTodonPy/Development/Orbitrap/iterator_class_method.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Spectra/Spectrum.py",
		"/Users/matteo/Projects/MassTodonPy/docs/Makefile",
		"/Users/matteo/Projects/MassTodonPy/Development/Orbitrap/preprocessing.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Reporter/Reporter.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Deconvolution/DeconvolutionProblem.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/MassTodon.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Deconvolution/Deconvolve.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/IsotopeCalculator/IsotopeDistribution.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Measure/Measure.py",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Plot/bokeh_spectrum.py",
		"/Users/matteo/Projects/MassTodonPy/TODO.md",
		"/Users/matteo/Projects/MassTodonPy/MassTodonPy/Misc/sorting.py",
		"/Users/matteo/Projects/MassTodonPy/Development/Spectrum/Spectrum.py",
		"/Users/matteo/Projects/rta/rta/preprocessing.py",
		"/Users/matteo/Projects/rta/rta/xvalidation/filters.py",
		"/Users/matteo/Projects/rta/rta/models/GMM_OLS_combo.py",
		"/Users/matteo/Projects/rta/rta/x_validation_potential.py",
		"/Users/matteo/Projects/rta/rta/models/GMLSQSpline.py",
		"/Users/matteo/Projects/rta/rta/models/SQSpline.py",
		"/Users/matteo/Projects/rta/TODO.md",
		"/Users/matteo/Projects/rta/rta/models/devel/gmm_ols.py",
		"/Users/matteo/Projects/rta/rta/models/plot.py",
		"/Users/matteo/Projects/rta/rta/models/RapidGMLSQSpline.py",
		"/Users/matteo/Projects/rta/rta/alignment/run_alignment.py",
		"/Users/matteo/Projects/rta/rta/models/base_model.py",
		"/Users/matteo/Projects/rta/rta/array_operations/misc.py",
		"/Users/matteo/Projects/rta/rta/junk/patsy_bs.py",
		"/Users/matteo/Projects/rta/rta/models/spline_regression.py",
		"/Users/matteo/Projects/rta/rta/misc.py",
		"/Users/matteo/Projects/rta/rta/splines/denoising.py",
		"/Users/matteo/Projects/rta/rta/models/least_squares_splines.py",
		"/Users/matteo/Projects/rta/rta/patsy_operations/parsers.py",
		"/Users/matteo/Projects/rta/rta/models/test_statistics/rt_residuals_distro.py",
		"/Users/matteo/Projects/rta/rta/models/sklearn_regressors.py",
		"/Users/matteo/Projects/rta/rta/array_operations/__init__.py",
		"/Users/matteo/Projects/rta/rta/patsy_operations/__init__.py",
		"/Users/matteo/Projects/rta/rta/xvalidation/__init__.py",
		"/Users/matteo/Projects/rta/rta/xvalidation/grouped_k_folds.py",
		"/Users/matteo/Projects/rta/rta/xvalidation/pept_ids_representation_in_runs.py",
		"/Users/matteo/Projects/rta/rta/splines/denoising2.py",
		"/Users/matteo/Projects/rta/rta/read_in_data.py",
		"/Users/matteo/Projects/rta/rta/getting_to_grips_with_pandas.py",
		"/Users/matteo/Projects/rta/rta/profiling_denoise_and_align.py",
		"/Users/matteo/Projects/rta/rta/splines/denoising_procedure.py",
		"/Users/matteo/Projects/rta/rta/tweaking_preprocessing.py",
		"/Users/matteo/Downloads/multiprocessing_test.py",
		"/Users/matteo/Projects/rta/rta/scripts/xvalidationq.py",
		"/Users/matteo/Projects/rta/rta/models/quantile.py",
		"/Users/matteo/Projects/rta/rta/models/__init__.py",
		"/Users/matteo/Projects/rta/rta/models/huber.py",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/data/PXD001845/20141202_AMB_Bora_10x_40MeOH_1FA_OT_120k_10uscans_728_ETD_4ms_24precZ.raw",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/data/uniprot-organism%3A1241935.fasta",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/data/tabula-IH532330.csv",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/data/taxonomy-islandicus+LAL14%2F1.tab",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/data/raw2np.go",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/data/scans_cnt.go",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/data/20140909_F_EV_Sisl-prep2-SAX-fr6_r120_r240-ETD5SA20_1.mgf",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/analysis/getting_spectra.py",
		"/Users/matteo/Poligon/Go/hello_world_2.go",
		"/Users/matteo/Poligon/Go/hello_world_0.go",
		"/Users/matteo/Poligon/Go/hello_world_1.go",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/analysis/reading_files/read_spectrum.go",
		"/Users/matteo/Library/Application Support/Sublime Text 3/Packages/User/golang.sublime-settings",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/Search summary top-down SAX all lines.txt",
		"/Users/matteo/Projects/masstodon_response_to_reviewers/analysis/PXD003074_header.py",
		"/Users/matteo/Downloads/Finnigan-0.0206/README",
		"/Users/matteo/Projects/rta/rta/kd_tree/kd_tree_nice.py",
		"/Users/matteo/Projects/rta/rta/scripts/find_neighbour_graph.py",
		"/Users/matteo/Projects/rta/rta/dbscan/dbscan_all_boxes.py",
		"/Users/matteo/Projects/rta/rta/dbscan/dbscan_percentile_boxes.py",
		"/Users/matteo/Projects/rta/rta/kd_tree/developing_kd_trees.py",
		"/Users/matteo/.config/zathura/zathurarc",
		"/opt/X11/include/X11/extensions/xtrapdi.h"
	],
	"find":
	{
		"height": 54.0
	},
	"find_in_files":
	{
		"height": 134.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"np.",
			"bitonic_clustering",
			"cluste",
			"sorted",
			"mz_local",
			"            \n",
			"list",
			"spectrum",
			"min_intensity",
			"percent_top_peaks",
			"print",
			"spectrum",
			"kwds",
			"_devel",
			"print",
			"graph",
			" =",
			"sort",
			"sort_by_first",
			"sort",
			"_peakGroups_bricks_clusters",
			"self.M"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bitonic_iterator",
			"deconvolution_graph"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Development/Orbitrap/matplotlib_colors.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1362,
						"regions":
						{
						},
						"selection":
						[
							[
								1333,
								1333
							]
						],
						"settings":
						{
							"auto_name": "cmaps['Qualitative'] = ['Pastel1', 'Pastel2', 'Pai",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Development/Orbitrap/preprocessing.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3961,
						"regions":
						{
						},
						"selection":
						[
							[
								745,
								745
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "MassTodonPy/Spectra/peak_clustering.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5726,
						"regions":
						{
						},
						"selection":
						[
							[
								5023,
								5023
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2316.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5610,
						"regions":
						{
							"0,0":
							{
								"flags": 272,
								"regions":
								[
									[
										0,
										4
									]
								],
								"scope": "terminalview.black_green"
							},
							"0,5":
							{
								"flags": 272,
								"regions":
								[
									[
										5,
										8
									]
								],
								"scope": "terminalview.black_green"
							},
							"58,0":
							{
								"flags": 272,
								"regions":
								[
									[
										5610,
										5610
									]
								],
								"scope": "terminalview.black_green"
							},
							"58,6":
							{
								"flags": 272,
								"regions":
								[
									[
										5610,
										5610
									]
								],
								"scope": "terminalview.black_green"
							}
						},
						"selection":
						[
							[
								15,
								15
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"caret_style": "blink",
							"color_scheme": "Packages/TerminalView/TerminalView.hidden-tmTheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"scroll_past_end": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminal_view": true,
							"terminal_view_activate_args":
							{
								"cmd": "/bin/bash -l",
								"cwd": "/Users/matteo/Projects/MassTodonPy",
								"keep_open": false,
								"syntax": null,
								"title": "Terminal (bash)"
							},
							"terminal_view_last_cursor_pos":
							[
								0,
								8
							],
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.golang_build":
	{
		"height": 225.0
	},
	"output.gotools_syntax_errors":
	{
		"height": 127.0
	},
	"pinned_build_system": "",
	"project": "masstodonpy.sublime-project",
	"replace":
	{
		"height": 94.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"biton",
				"MassTodonPy/Spectra/bitonic_clustering.py"
			],
			[
				"dec",
				"MassTodonPy/Deconvolution/DeconvolutionProblem.py"
			],
			[
				"Spect",
				"MassTodonPy/Spectra/Spectrum.py"
			],
			[
				"decon",
				"MassTodonPy/Deconvolution/Deconvolve.py"
			],
			[
				"TODO",
				"TODO.md"
			],
			[
				"MEa",
				"MassTodonPy/Measure/Measure.py"
			],
			[
				"Spe",
				"Development/Spectrum/Spectrum.py"
			],
			[
				"Mass",
				"MassTodonPy/MassTodon.py"
			],
			[
				"file",
				"rta/xvalidation/filters.py"
			],
			[
				"prep",
				"rta/preprocessing.py"
			],
			[
				"fil",
				"rta/xvalidation/filters.py"
			],
			[
				"pre",
				"rta/preprocessing.py"
			],
			[
				"preop",
				"rta/preprocessing.py"
			],
			[
				"SQL",
				"rta/models/SQSpline.py"
			],
			[
				"plot",
				"rta/models/plot.py"
			],
			[
				"comb",
				"rta/models/GMM_OLS_combo.py"
			],
			[
				"junk",
				"rta/junk/patsy_bs.py"
			],
			[
				"bas",
				"rta/models/base_model.py"
			],
			[
				"GLM",
				"rta/models/GMM_OLS_combo.py"
			],
			[
				"misc",
				"rta/array_operations/misc.py"
			],
			[
				"array_oper",
				"rta/array_operations/misc.py"
			],
			[
				"base",
				"rta/models/base_model.py"
			],
			[
				"Spine",
				"rta/models/spline_regression.py"
			],
			[
				"plo",
				"rta/models/plot.py"
			],
			[
				"pars",
				"rta/patsy_operations/parsers.py"
			],
			[
				"deni",
				"rta/splines/denoising.py"
			],
			[
				"deno",
				"rta/splines/denoising.py"
			],
			[
				"SKL",
				"rta/models/sklearn_regressors.py"
			],
			[
				"splin",
				"rta/models/spline_regression.py"
			],
			[
				"skle",
				"rta/models/sklearn_regressors.py"
			],
			[
				"poten",
				"rta/x_validation_potential.py"
			],
			[
				"pandas",
				"rta/getting_to_grips_with_pandas.py"
			],
			[
				"twa",
				"rta/tweaking_preprocessing.py"
			],
			[
				"spline",
				"rta/models/spline_regression.py"
			],
			[
				"denoi",
				"rta/splines/denoising.py"
			],
			[
				"quant",
				"rta/models/quantile.py"
			],
			[
				"hub",
				"rta/models/huber.py"
			],
			[
				"kd",
				"rta/kd_tree/kd_tree_nice.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 221.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
